<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--开启注解扫描,只扫描Controller-->
    <context:component-scan base-package="cn.smbms">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置视图解析器-->
    <!--<bean id="internalResource" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--多视图解析管理器的配置-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!--指定是否可以使用format指定MIME类型 view?format=json-->
        <property name="favorParameter" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <props>
                <prop key="html">text/html;charset=UTF-8</prop>
                <prop key="json">application/json;charset=UTF-8</prop>
                <prop key="xml">application/xml;charset=UTF-8</prop>
            </props>
        </property>
    </bean>
    <!--配置多视图解析器:允许同样的内容数据呈现不同的view-->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!--引用多视图解析管理器配置-->
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <!--指定多个视图解析器 一对一-->
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--过滤静态资源 由于web.xml中的DispatcherServlet请求映射为"/",捕获了Web容器的所有请求,因此静态文件无法访问-->
    <!--mapping:将静态资源映射到指定的路径(/statics)下-->
    <!--location:本地静态资源文件所在的目录-->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/calendar/**" location="/calendar/"/>

    <!--开启Spring MVC注解支持-->
    <mvc:annotation-driven> <!--conversion-service="StringToDateConverter"-->
        <mvc:message-converters>
            <!--装配StringHttpMessageConverter设置字符编码为UTF-8,解决所有JSON传递数据中文乱码问题-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--装配FastJsonHttpMessageConverter解决JSON传递数据日期格式问题 , 若要起作用,返回值必须是一个对象 而不是json字符串-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <!--解决日期格式问题-->
                <property name="fastJsonConfig" ref="fastJsonConfig"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--装配fastJsonConfig类解决日期格式问题-->
    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <!--可以通过@JSONField改变日期格式-->
        <property name="serializerFeatures">
            <list>
                <value>WriteDateUseDateFormat</value>
            </list>
        </property>
        <!--全局设置日期格式-->
        <!--<property name="charset" value="utf-8"/>-->
        <!--<property name="dateFormat" value="yyyy-MM-dd"/>-->
    </bean>

    <!--自动寻找静态资源 不需要配置<mvc:resources>标签-->
    <!--<mvc:default-servlet-handler/>-->

    <!--配置MultipartResolver,用于上传文件,由SpringMVC提供-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传文件大小上限,单位为字节-->
        <property name="maxUploadSize" value="5000000"/>
        <!--请求的编码格式 >> 必须和JSP的pageEncoding一致-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--自定义类型转换器-->
    <!--<bean id="StringToDateConverter" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
        <!--<property name="converters">-->
            <!--<list>-->
                <!--<bean class="cn.smbms.tools.StringToDateConverter">-->
                    <!--<constructor-arg name="datePattern" value="yyyy-MM-dd"/>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--定义拦截器 拦截用户请求,进行session判断-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/sys/**"/>-->
            <!--<bean class="cn.smbms.interceptor.SysInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
</beans>